{"version":3,"sources":["webpack://project-structure/./src/components/sortable-table/index.js","webpack://project-structure/./src/components/double-slider/index.js","webpack://project-structure/./src/pages/products/list/products-header.js","webpack://project-structure/./src/pages/products/list/index.js","webpack://project-structure/./src/utils/fetch-json.js"],"names":["SortableTable","constructor","headerConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","asc","desc","async","field","this","end","data","loadData","update","element","document","createElement","innerHTML","template","firstElementChild","subElements","getSubElements","arrowContainer","arrowElement","addOrderToCell","addEventListener","event","target","closest","dataset","currentOrder","header","querySelector","targetOrder","getTargetOrder","sort","bottom","getBoundingClientRect","loadOnScrollAvailable","loading","documentElement","clientHeight","URL","process","render","getTable","searchParams","set","key","value","Object","entries","filters","toString","table","classList","add","fetchJson","remove","length","headerCell","append","setAttribute","orderedCell","removeAttribute","sortOnClient","sortOnServer","sortFieldConfig","sortType","direction","directions","sortedData","a","b","localeCompare","caseFirst","getTableHead","map","cell","title","join","getTableRow","itemCells","getTableBody","getRowsHtml","result","elements","querySelectorAll","subElement","onSortableCellClick","window","onWindowScroll","isAppend","values","body","destroy","removeEventListener","DoubleSlider","min","max","formatValue","selected","from","to","preventDefault","left","innerLeft","right","innerRight","width","inner","dragging","thumbLeft","newLeft","clientX","shiftX","parseFloat","thumbRight","style","progress","getValue","newRight","onThumbPointerMove","onThumbPointerUp","dispatchEvent","CustomEvent","detail","bubbles","ondragstart","initEventListeners","onThumbPointerDown","rangeTotal","Math","floor","innerText","thumbElem","round","toLocaleString","API_URL","Page","filterName","filterStatus","components","sliderContainer","sliderMin","sliderMax","updateTableComponent","initComponents","renderComponents","params","getParamsFromForm","status","title_like","price_lte","price_gte","sortableTable","loadStart","loadStep","keys","forEach","component","root","$element","reduce","accum","emptyPlaceholder","clearFilters","response","fetch","err","FetchError","ok","errorText","statusText","json","error","message","Error","super","reason","alert"],"mappings":"0QAEe,MAAMA,EAcnBC,cASQ,IATIC,EASJ,uDATmB,IAAI,IAC7BC,EAAM,GADuB,OAE7BC,EAAS,CACPC,GAAIH,EAAaI,KAAKC,GAAQA,EAAKC,UAAUH,GAC7CI,MAAO,OAJoB,cAM7BC,GAAgB,EANa,KAO7BC,EAAO,GAPsB,MAQ7BC,EAAQ,GACF,uDAAJ,GAAI,cAtBD,IAsBC,qGAlBE,IAkBF,oBAjBK,CACXC,IAAK,EACLC,MAAO,IAeD,gBAbC,IAaD,kBAZE,GAYF,gCAXgB,GAWhB,sBAwEOC,MAAOC,EAAOP,KAC3BQ,KAAKC,IAAMD,KAAKN,KAChB,MAAMQ,QAAaF,KAAKG,SAASJ,EAAOP,EAAOQ,KAAKL,MAAOK,KAAKN,MAChEM,KAAKI,OAAOF,GAAM,KA3EZ,gBA2KCJ,UACP,MAAM,GAACV,EAAD,MAAKI,GAASQ,KAAKb,OACnBkB,EAAUC,SAASC,cAAc,OAEvCF,EAAQG,UAAYR,KAAKS,SAEzBT,KAAKK,QAAUA,EAAQK,kBACvBV,KAAKW,YAAcX,KAAKY,eAAeZ,KAAKK,SAE5C,MAAMQ,EAAiBP,SAASC,cAAc,OAC9CM,EAAeL,UAAa,wIAK5BR,KAAKc,aAAeD,EAAeH,kBAEnC,MAAMR,QAAaF,KAAKG,SAASf,EAAII,EAAOQ,KAAKL,MAAOK,KAAKC,KAE7DD,KAAKI,OAAOF,GACZF,KAAKe,eAAe3B,EAAII,GACxBQ,KAAKgB,qBAhMC,6BAwMeC,IACrB,GAAIA,EAAMC,OAAOC,QAAQ,0BAA2B,CAClD,MAAMpB,EAAQkB,EAAMC,OAAOC,QAAQ,mBAAmBC,QAAQhC,GACxDiC,EAAerB,KAAKW,YAAYW,OAAOC,cAAe,gBACtDC,EAAcH,EAAerB,KAAKyB,eAAeJ,EAAaD,QAAQ5B,OAAS,MAErFQ,KAAK0B,KAAK3B,EAAOyB,MA9Mb,wBAkNS1B,UACf,GAAIE,KAAKK,QAAS,CAChB,MAAM,OAAEsB,GAAW3B,KAAKK,QAAQuB,wBAEhC,GAAI5B,KAAK6B,wBAA0B7B,KAAKP,gBAAkBO,KAAK8B,SAAWH,EAASrB,SAASyB,gBAAgBC,aAAc,CACxH,MAAM,GAAE5C,EAAF,MAAMI,GAAUQ,KAAKb,OAE3Ba,KAAKL,MAAQK,KAAKC,IAClBD,KAAKC,IAAMD,KAAKL,MAAQK,KAAKN,KAE7BM,KAAK8B,SAAU,EAEf,MAAM5B,QAAaF,KAAKG,SAASf,EAAII,EAAOQ,KAAKL,MAAOK,KAAKC,KAC7DD,KAAKI,OAAOF,GAEZF,KAAK8B,SAAU,MAhOnB9B,KAAKf,aAAeA,EACpBe,KAAKd,IAAM,IAAI+C,IAAI/C,EAAKgD,oCACxBlC,KAAKb,OAASA,EACda,KAAKP,cAAgBA,EACrBO,KAAKL,MAAQA,EACbK,KAAKN,KAAOA,EACZM,KAAKC,IAAMD,KAAKL,MAAQK,KAAKN,KAE7BM,KAAKmC,SAGK,eACV,MAAQ,4FAEFnC,KAAKoC,iCAKC,eAAChD,EAAII,EAAOG,EAAOM,GAC/BD,KAAKd,IAAImD,aAAaC,IAAI,QAASlD,GACnCY,KAAKd,IAAImD,aAAaC,IAAI,SAAU9C,GACpCQ,KAAKd,IAAImD,aAAaC,IAAI,SAAU3C,GACpCK,KAAKd,IAAImD,aAAaC,IAAI,OAAQrC,GAElC,IAAK,MAAOsC,EAAKC,KAAUC,OAAOC,QAAQ1C,KAAK2C,UACzCH,GAAmB,IAAVA,IACXxC,KAAKd,IAAImD,aAAaC,IAAIC,EAAKC,EAAMI,YAIzC5C,KAAKW,YAAYkC,MAAMC,UAAUC,IAAI,0BAErC,MAAM7C,QAAa8C,OAAUhD,KAAKd,KAMlC,OAJAc,KAAKW,YAAYkC,MAAMC,UAAUG,OAAO,0BAExCjD,KAAK6B,sBAAwB3B,EAAKgD,SAAWlD,KAAKN,KAE3CQ,EAGTa,eAAehB,EAAOP,GACpB,MAAM2D,EAAanD,KAAKW,YAAYW,OAAOC,cAAe,YAAWxB,MACjEoD,IACFA,EAAWC,OAAOpD,KAAKc,cACvBqC,EAAWE,aAAa,aAAc7D,IAI1CkC,KAAK3B,EAAOP,GACV,MAAM8D,EAActD,KAAKW,YAAYW,OAAOC,cAAe,gBACvD+B,GACFA,EAAYC,gBAAgB,cAG9BvD,KAAKe,eAAehB,EAAOP,GAE3BQ,KAAKL,MAAQ,EACbK,KAAKb,OAAS,CACZC,GAAIW,EACJP,MAAOA,GAGLQ,KAAKP,cACPO,KAAKwD,aAAazD,EAAOP,GAEzBQ,KAAKyD,aAAa1D,EAAOP,GAU7BgE,aAAazD,EAAOP,GAClB,MAAMkE,EAAkB1D,KAAKf,aAAaI,KAAKC,GAAQA,EAAKF,KAAOW,GAC7D4D,EAAWD,EAAkBA,EAAgBC,SAAW,SACxDC,EAAY5D,KAAK6D,WAAWrE,GAE5BsE,EAAa,IAAI9D,KAAKE,MAAMwB,KAAK,CAACqC,EAAGC,KACzC,OAAQL,GACN,IAAK,SACH,OAAOC,GAAaG,EAAEhE,GAASiE,EAAEjE,IACnC,IAAK,SACH,OAAO6D,EAAYG,EAAEhE,GAAOkE,cAAcD,EAAEjE,GAAQ,CAAC,KAAM,MAAO,CAACmE,UAAW,aAIpFlE,KAAKI,OAAO0D,GAAY,GAG1BK,eASE,MAAQ,mGARYnE,KAAKf,aAAamF,IAAIC,GAChC,wDACuCA,EAAKjF,sBAAsBiF,EAAK9E,+BACnE8E,EAAKC,wCAODC,KAAK,0BAKzBC,YAAYlF,GACV,MAAMmF,EAAYzE,KAAKf,aAAamF,IAAIC,GAC/BA,EAAK5D,SAAW4D,EAAK5D,SAASnB,EAAK+E,EAAKjF,KAAQ,+CACjBE,EAAK+E,EAAKjF,qBAIlD,MAAQ,8BACeE,EAAKF,6CACtBqF,EAAUF,KAAK,wBAKvBG,eACE,MAAQ,2EAEF1E,KAAK2E,oCAKbvC,WACE,MAAQ,6FAEFpC,KAAKmE,2BACLnE,KAAK0E,+aAcb9D,eAAeP,GACb,MAAMuE,EAAS,GACTC,EAAWxE,EAAQyE,iBAAiB,kBAE1C,IAAK,MAAMC,KAAcF,EAAU,CAGjCD,EAFaG,EAAW3D,QAAQf,SAEjB0E,EAGjB,OAAOH,EAGTD,cAIE,OAJ4B,uDAAX3E,KAAKE,MACJkE,IAAI9E,GACbU,KAAKwE,YAAYlF,IAEdiF,KAAK,IA2BnBvD,mBACEhB,KAAKW,YAAYW,OAAON,iBAAiB,cAAehB,KAAKgF,qBAC7DC,OAAOjE,iBAAiB,SAAUhB,KAAKkF,gBAiCzC9E,OAAOF,GAAuB,IAAjBiF,IAAiB,yDACxBjF,GAAQuC,OAAO2C,OAAOlF,GAAMgD,QAC9BlD,KAAKW,YAAYkC,MAAMC,UAAUG,OAAO,wBAEpCkC,EACFnF,KAAKW,YAAY0E,KAAK7E,WAAaR,KAAK2E,YAAYzE,GAEpDF,KAAKW,YAAY0E,KAAK7E,UAAYR,KAAK2E,YAAYzE,IAE3CiF,GACVnF,KAAKW,YAAYkC,MAAMC,UAAUC,IAAI,wBAGvC/C,KAAKE,KAAOA,EAGduB,eAAeJ,GAMb,MALY,CACVzB,IAAK,OACLC,KAAM,OAGGwB,GAGbiE,UACMtF,KAAKK,SACPL,KAAKK,QAAQ4C,SAEfgC,OAAOM,oBAAoB,SAAUvF,KAAKkF,gBAC1ClF,KAAKK,QAAU,Q,gLC7RJ,MAAMmF,EAwDnBxG,cAQoB,IARR,IACEyG,EAAM,IADR,IAEEC,EAAM,IAFR,YAGEC,EAAcnD,IAAS,IAAMA,GAH/B,SAIEoD,EAAW,CACTC,KAAMJ,EACNK,GAAIJ,IAEA,uDAAJ,GAAI,8CA9DN,IA8DM,4BA5DCzE,IACnBA,EAAM8E,iBAEN,MAAQC,KAAMC,EAAWC,MAAOC,EAA1B,MAAsCC,GAAUpG,KAAKW,YAAY0F,MAAMzE,wBAE7E,GAAI5B,KAAKsG,WAAatG,KAAKW,YAAY4F,UAAW,CAChD,IAAIC,GAAWvF,EAAMwF,QAAUR,EAAYjG,KAAK0G,QAAUN,EAEtDI,EAAU,IACZA,EAAU,GAEZA,GAAW,IACX,MAAMN,EAAQS,WAAW3G,KAAKW,YAAYiG,WAAWC,MAAMX,OAEvDM,EAAUN,EAAQ,MACpBM,EAAU,IAAMN,GAGlBlG,KAAKsG,SAASO,MAAMb,KAAOhG,KAAKW,YAAYmG,SAASD,MAAMb,KAAOQ,EAAU,IAC5ExG,KAAKW,YAAYkF,KAAKrF,UAAYR,KAAK2F,YAAY3F,KAAK+G,WAAWlB,MAGrE,GAAI7F,KAAKsG,WAAatG,KAAKW,YAAYiG,WAAY,CACjD,IAAII,GAAYb,EAAalF,EAAMwF,QAAUzG,KAAK0G,QAAUN,EAExDY,EAAW,IACbA,EAAW,GAEbA,GAAY,IAEZ,MAAMhB,EAAOW,WAAW3G,KAAKW,YAAY4F,UAAUM,MAAMb,MAErDA,EAAOgB,EAAW,MACpBA,EAAW,IAAMhB,GAEnBhG,KAAKsG,SAASO,MAAMX,MAAQlG,KAAKW,YAAYmG,SAASD,MAAMX,MAAQc,EAAW,IAC/EhH,KAAKW,YAAYmF,GAAGtF,UAAYR,KAAK2F,YAAY3F,KAAK+G,WAAWjB,OAwBjD,0BApBD,KACjB9F,KAAKK,QAAQyC,UAAUG,OAAO,yBAE9B3C,SAASiF,oBAAoB,cAAevF,KAAKiH,oBACjD3G,SAASiF,oBAAoB,YAAavF,KAAKkH,kBAE/ClH,KAAKK,QAAQ8G,cAAc,IAAIC,YAAY,eAAgB,CACzDC,OAAQrH,KAAK+G,WACbO,SAAS,OAaXtH,KAAKyF,IAAMA,EACXzF,KAAK0F,IAAMA,EACX1F,KAAK2F,YAAcA,EACnB3F,KAAK4F,SAAWA,EAEhB5F,KAAKmC,SAGK,eACV,MAAM,KAAE0D,EAAF,GAAQC,GAAO9F,KAAK4F,SAE1B,MAAQ,+DACsB5F,KAAK2F,YAAYE,0WAMnB7F,KAAK2F,YAAYG,wBAI/C3D,SACE,MAAM9B,EAAUC,SAASC,cAAc,OAEvCF,EAAQG,UAAYR,KAAKS,SAEzBT,KAAKK,QAAUA,EAAQK,kBACvBV,KAAKK,QAAQkH,YAAc,KAAM,EAEjCvH,KAAKW,YAAcX,KAAKY,eAAeP,GAEvCL,KAAKwH,qBAELxH,KAAKI,SAGPoH,qBACE,MAAM,UAAEjB,EAAF,WAAaK,GAAe5G,KAAKW,YAEvC4F,EAAUvF,iBAAiB,cAAeC,GAASjB,KAAKyH,mBAAmBxG,IAC3E2F,EAAW5F,iBAAiB,cAAeC,GAASjB,KAAKyH,mBAAmBxG,IAG9EL,eAAeP,GACb,MAAMuE,EAAS,GACTC,EAAWxE,EAAQyE,iBAAiB,kBAE1C,IAAK,MAAMC,KAAcF,EAAU,CAGjCD,EAFaG,EAAW3D,QAAQf,SAEjB0E,EAGjB,OAAOH,EAGT3B,SACEjD,KAAKK,QAAQ4C,SAGfqC,UACEtF,KAAKiD,SACL3C,SAASiF,oBAAoB,cAAevF,KAAKiH,oBACjD3G,SAASiF,oBAAoB,YAAavF,KAAKkH,kBAGjD9G,SACE,MAAMsH,EAAa1H,KAAK0F,IAAM1F,KAAKyF,IAC7BO,EAAO2B,KAAKC,OAAO5H,KAAK4F,SAASC,KAAO7F,KAAKyF,KAAOiC,EAAa,KAAO,IACxExB,EAAQyB,KAAKC,OAAO5H,KAAK0F,IAAM1F,KAAK4F,SAASE,IAAM4B,EAAa,KAAO,IAE7E1H,KAAKW,YAAYmG,SAASD,MAAMb,KAAOA,EACvChG,KAAKW,YAAYmG,SAASD,MAAMX,MAAQA,EAExClG,KAAKW,YAAY4F,UAAUM,MAAMb,KAAOA,EACxChG,KAAKW,YAAYiG,WAAWC,MAAMX,MAAQA,EAE1ClG,KAAKW,YAAYkF,KAAKgC,UAAY7H,KAAK2F,YAAY3F,KAAKyF,KACxDzF,KAAKW,YAAYmF,GAAG+B,UAAY7H,KAAK2F,YAAY3F,KAAK0F,KAGxD+B,mBAAmBxG,GACjB,MAAM6G,EAAY7G,EAAMC,OAExBD,EAAM8E,iBAEN,MAAM,KAAEC,EAAF,MAAQE,GAAU4B,EAAUlG,wBAE9BkG,IAAc9H,KAAKW,YAAY4F,UACjCvG,KAAK0G,OAASR,EAAQjF,EAAMwF,QAE5BzG,KAAK0G,OAASV,EAAO/E,EAAMwF,QAG7BzG,KAAKsG,SAAWwB,EAEhB9H,KAAKK,QAAQyC,UAAUC,IAAI,yBAE3BzC,SAASU,iBAAiB,cAAehB,KAAKiH,oBAC9C3G,SAASU,iBAAiB,YAAahB,KAAKkH,kBAG9CH,WACE,MAAMW,EAAa1H,KAAK0F,IAAM1F,KAAKyF,KAC7B,KAAEO,GAAShG,KAAKW,YAAY4F,UAAUM,OACtC,MAAEX,GAAUlG,KAAKW,YAAYiG,WAAWC,MAK9C,MAAO,CAAEhB,KAHI8B,KAAKI,MAAM/H,KAAKyF,IAAyB,IAAnBkB,WAAWX,GAAe0B,GAG9C5B,GAFJ6B,KAAKI,MAAM/H,KAAK0F,IAA0B,IAApBiB,WAAWT,GAAgBwB,KC9KhE,MA2DA,EA3De,CACb,CACEtI,GAAI,SACJkF,MAAO,QACP/E,UAAU,EACVkB,SAAUP,GACA,kHAEmDA,EAAK,GAAGhB,qCAKvE,CACEE,GAAI,QACJkF,MAAO,OACP/E,UAAU,EACVoE,SAAU,UAEZ,CACEvE,GAAI,cACJkF,MAAO,WACP/E,UAAU,EACVkB,SAAUP,GACA,iDACFA,EAAKoE,yBAIf,CACElF,GAAI,WACJkF,MAAO,WACP/E,UAAU,EACVoE,SAAU,UAEZ,CACEvE,GAAI,QACJkF,MAAO,QACP/E,UAAU,EACVoE,SAAU,SACVlD,SAAUP,GACA,kDACDA,EAAK8H,eAAe,4BAI/B,CACE5I,GAAI,SACJkF,MAAO,SACP/E,UAAU,EACVoE,SAAU,SACVlD,SAAUP,GACA,iDACFA,EAAO,EAAI,SAAW,+B,qIChDlC,MAAM+H,EAAU,gDAED,MAAMC,EAAK,4DAEV,IAFU,oBAGX,IAHW,kBAIb,IAJa,mBAKZ,GALY,mBAMZ,KANY,mBAOZ,KAPY,sBA6IT,KACblI,KAAKW,YAAYwH,WAAW3F,MAAQ,GACpCxC,KAAKW,YAAYyH,aAAa5F,MAAQ,GAEtCxC,KAAKqI,WAAWC,gBAAgB7C,IAAMzF,KAAKuI,UAC3CvI,KAAKqI,WAAWC,gBAAgB5C,IAAM1F,KAAKwI,UAC3CxI,KAAKqI,WAAWC,gBAAgBlI,SAEhCJ,KAAKyI,yBA5IK,eACV,MAAMpI,EAAUC,SAASC,cAAc,OAcvC,OAZAF,EAAQG,UAAYR,KAAKS,SAEzBT,KAAKK,QAAUA,EAAQK,kBACvBV,KAAKW,YAAcX,KAAKY,eAAeZ,KAAKK,SAE5CL,KAAK0I,uBACC1I,KAAK2I,mBAEX3I,KAAKW,YAAcX,KAAKY,eAAeZ,KAAKK,SAE5CL,KAAKwH,qBAEExH,KAAKK,QAGY,6BACxB,MAAMuI,EAAS5I,KAAK6I,qBACd,OAACC,EAAD,WAASC,EAAT,UAAqBC,EAArB,UAAgCC,GAAaL,GAC7C,OAACzJ,GAAUa,KAAKqI,WAAWa,cAEjClJ,KAAKqI,WAAWa,cAAcvG,QAAUiG,EAExC,MAAM1J,EAAM,IAAI+C,IAAIgG,EAAS/F,oCAC7BhD,EAAImD,aAAaC,IAAI,QAASnD,EAAOC,IACrCF,EAAImD,aAAaC,IAAI,SAAUnD,EAAOK,OACtCN,EAAImD,aAAaC,IAAI,SAAUtC,KAAKmJ,UAAUvG,YAC9C1D,EAAImD,aAAaC,IAAI,OAAQtC,KAAKoJ,SAASxG,YAC3C1D,EAAImD,aAAaC,IAAI,YAAa0G,GAClC9J,EAAImD,aAAaC,IAAI,YAAa2G,GAE9BH,GACF5J,EAAImD,aAAaC,IAAI,SAAUwG,GAG7BC,GACF7J,EAAImD,aAAaC,IAAI,aAAcyG,GAGrC,MAAM7I,QAAa8C,OAAU9D,GAE7Bc,KAAKqI,WAAWa,cAAc9I,OAAOF,GAAM,GAGjC,eACV,MAAQ,spCAgCVwI,iBACE,MAAMQ,EAAgB,IAAInK,IAAcuC,EAAQ,CAC9CpC,IAAK+I,EACL9I,OAAQ,CACNC,GAAI,QACJI,MAAO,OAETG,MAAOK,KAAKmJ,UACZzJ,KAAMM,KAAKoJ,SACX3J,eAAe,IAGX6I,EAAkB,IAAI9C,EAAa,CAACC,IAAKzF,KAAKuI,UAAW7C,IAAK1F,KAAKwI,YAEzExI,KAAKqI,WAAWa,cAAgBA,EAChClJ,KAAKqI,WAAWC,gBAAkBA,EAGpCK,mBACElG,OAAO4G,KAAKrJ,KAAKqI,YAAYiB,QAAQC,IACnC,MAAMC,EAAOxJ,KAAKW,YAAY4I,IACxB,QAAElJ,GAAYL,KAAKqI,WAAWkB,GAEpCC,EAAKpG,OAAO/C,KAIhBO,eAAgB6I,GAGd,MAAO,IAFUA,EAAS3E,iBAAiB,mBAEtB4E,OAAO,CAACC,EAAO5E,KAClC4E,EAAM5E,EAAW3D,QAAQf,SAAW0E,EAE7B4E,GACN,IAGLnC,qBACExH,KAAKW,YAAYiJ,iBAAiBrI,cAAc,UAAUP,iBAAiB,cAAehB,KAAK6J,cAE/F7J,KAAKW,YAAYyH,aAAapH,iBAAiB,SAAU,KACvDhB,KAAKyI,yBAGPzI,KAAKW,YAAYwH,WAAWnH,iBAAiB,QAAS,KACpDhB,KAAKyI,yBAGPzI,KAAKqI,WAAWC,gBAAgBjI,QAAQW,iBAAiB,eAAgB,KACvEhB,KAAKyI,yBAeTI,oBACE,MAAMjE,EAAS,IACT,KAAEiB,EAAF,GAAQC,GAAO9F,KAAKqI,WAAWC,gBAAgBvB,WAOrD,OALAnC,EAAOoE,UAAYlD,EACnBlB,EAAOqE,UAAYpD,EACnBjB,EAAOkE,OAAS9I,KAAKW,YAAYyH,aAAa5F,MAC9CoC,EAAOmE,WAAa/I,KAAKW,YAAYwH,WAAW3F,MAEzCoC,EAGTU,UACE,IAAK,MAAMiE,KAAa9G,OAAO2C,OAAOpF,KAAKqI,YACzCkB,EAAUjE,a,cCzKDxF,eAAA,EAAeZ,EAAK0J,GACjC,IAAIkB,EASAzE,EAPJ,IAEEyE,QAAiBC,MAAM7K,EAAI0D,WAAYgG,GACvC,MAAMoB,GACN,MAAM,IAAIC,EAAWH,EAAU,+BAKjC,IAAKA,EAASI,GAAI,CAChB,IAAIC,EAAYL,EAASM,WAEzB,IACE/E,QAAayE,EAASO,OAEtBF,EAAa9E,EAAKiF,OAASjF,EAAKiF,MAAMC,SAAalF,EAAKnF,MAAQmF,EAAKnF,KAAKoK,OAASjF,EAAKnF,KAAKoK,MAAMC,SAAYJ,EAC/G,MAAOG,IAET,IAAIC,EAAW,SAAQT,EAAShB,WAAWqB,IAE3C,MAAM,IAAIF,EAAWH,EAAUzE,EAAMkF,GAGvC,IACE,aAAaT,EAASO,OACtB,MAAML,GACN,MAAM,IAAIC,EAAWH,EAAU,KAAME,EAAIO,U,iBAItC,MAAMN,UAAmBO,MAG9BxL,YAAY8K,EAAUzE,EAAMkF,G,UAC1BE,MAAMF,G,EAHD,c,EAE8B,U,EAAA,M,sFAEnCvK,KAAK8J,SAAWA,EAChB9J,KAAKqF,KAAOA,GAKhBJ,OAAOjE,iBAAiB,qBAAsBC,IACxCA,EAAMyJ,kBAAkBT,GAC1BU,MAAM1J,EAAMyJ,OAAOH","file":"products-list-index-js-197.js","sourcesContent":["import fetchJson from '../../utils/fetch-json.js';\n\nexport default class SortableTable {\n  data = [];\n  element;\n  subElements;\n  arrowElement;\n  filters = {};\n  directions = {\n    asc: 1,\n    desc: -1\n  };\n  offset = 50;\n  loading = false;\n  loadOnScrollAvailable = true;\n\n  constructor(headerConfig = [], {\n    url = '',\n    sorted = {\n      id: headerConfig.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    step = 30,\n    start = 0\n  } = {}) {\n    this.headerConfig = headerConfig;\n    this.url = new URL(url, process.env.BACKEND_URL);\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n    this.start = start;\n    this.step = step;\n    this.end = this.start + this.step;\n\n    this.render();\n  }\n\n  get template() {\n    return `\n      <div data-element=\"productsContainer\" class=\"products-list__container\">\n        ${this.getTable()}\n      </div>\n    `;\n  }\n\n  async loadData(id, order, start, end) {\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    for (const [key, value] of Object.entries(this.filters)) {\n      if (value || value === 0) {\n        this.url.searchParams.set(key, value.toString());\n      }\n    }\n\n    this.subElements.table.classList.add('sortable-table_loading');\n\n    const data = await fetchJson(this.url);\n\n    this.subElements.table.classList.remove('sortable-table_loading');\n\n    this.loadOnScrollAvailable = data.length === this.step;\n\n    return data;\n  }\n\n  addOrderToCell(field, order) {\n    const headerCell = this.subElements.header.querySelector(`[data-id=${field}]`);\n    if (headerCell) {\n      headerCell.append(this.arrowElement);\n      headerCell.setAttribute('data-order', order);\n    }\n  }\n\n  sort(field, order) {\n    const orderedCell = this.subElements.header.querySelector(`[data-order]`);\n    if (orderedCell) {\n      orderedCell.removeAttribute('data-order');\n    }\n\n    this.addOrderToCell(field, order);\n\n    this.start = 0;\n    this.sorted = {\n      id: field,\n      order: order\n    };\n\n    if (this.isSortLocally) {\n      this.sortOnClient(field, order);\n    } else {\n      this.sortOnServer(field, order);\n    }\n  }\n\n  sortOnServer = async (field, order) => {\n    this.end = this.step;\n    const data = await this.loadData(field, order, this.start, this.step);\n    this.update(data, false);\n  }\n\n  sortOnClient(field, order) {\n    const sortFieldConfig = this.headerConfig.find(item => item.id === field);\n    const sortType = sortFieldConfig ? sortFieldConfig.sortType : 'number';\n    const direction = this.directions[order];\n\n    const sortedData = [...this.data].sort((a, b) => {\n      switch (sortType) {\n        case 'number':\n          return direction * (a[field] - b[field]);\n        case 'string':\n          return direction * a[field].localeCompare(b[field], ['ru', 'en'], {caseFirst: 'upper'});\n      }\n    });\n\n    this.update(sortedData, false);\n  }\n\n  getTableHead() {\n    const headerCells = this.headerConfig.map(cell => {\n      return `\n        <div class=\"sortable-table__cell\" data-id=\"${cell.id}\" data-sortable=\"${cell.sortable}\">\n          <span>${cell.title}</span>\n        </div>\n      `;\n    });\n\n    return `\n      <div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n        ${headerCells.join('')}\n      </div>\n    `;\n  }\n\n  getTableRow(item) {\n    const itemCells = this.headerConfig.map(cell => {\n      return cell.template ? cell.template(item[cell.id]) : `\n        <div class=\"sortable-table__cell\">${item[cell.id]}</div>\n      `;\n    });\n\n    return `\n      <a href=\"/products/${item.id}\" class=\"sortable-table__row\">\n        ${itemCells.join('')}\n      </a>\n    `;\n  }\n\n  getTableBody() {\n    return `\n      <div data-element=\"body\" class=\"sortable-table__body\">\n        ${this.getRowsHtml()}\n      </div>\n    `;\n  }\n\n  getTable() {\n    return `\n      <div data-element=\"table\" class=\"sortable-table sortable-table_loading\">\n        ${this.getTableHead()}\n        ${this.getTableBody()}\n\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          <div>\n            <p>No products satisfies your filter criteria</p>\n            <button type=\"button\" class=\"button-primary-outline\">Reset all filters</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  getSubElements(element) {\n    const result = {};\n    const elements = element.querySelectorAll('[data-element]');\n\n    for (const subElement of elements) {\n      const name = subElement.dataset.element;\n\n      result[name] = subElement;\n    }\n\n    return result;\n  }\n\n  getRowsHtml(data = this.data) {\n    const rows = data.map(item => {\n      return this.getTableRow(item);\n    });\n    return rows.join('');\n  }\n\n  render = async () => {\n    const {id, order} = this.sorted;\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    const arrowContainer = document.createElement('div');\n    arrowContainer.innerHTML = `\n      <span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n        <span class=\"sort-arrow\"></span>\n      </span>\n    `;\n    this.arrowElement = arrowContainer.firstElementChild;\n\n    const data = await this.loadData(id, order, this.start, this.end);\n\n    this.update(data);\n    this.addOrderToCell(id, order);\n    this.addEventListener();\n  }\n\n  addEventListener() {\n    this.subElements.header.addEventListener('pointerdown', this.onSortableCellClick);\n    window.addEventListener('scroll', this.onWindowScroll);\n  }\n\n  onSortableCellClick = (event) => {\n    if (event.target.closest('[data-sortable=\"true\"]')) {\n      const field = event.target.closest('[data-sortable]').dataset.id;\n      const currentOrder = this.subElements.header.querySelector(`[data-order]`);\n      const targetOrder = currentOrder ? this.getTargetOrder(currentOrder.dataset.order) : 'asc';\n\n      this.sort(field, targetOrder);\n    }\n  }\n\n  onWindowScroll = async () => {\n    if (this.element) {\n      const { bottom } = this.element.getBoundingClientRect();\n\n      if (this.loadOnScrollAvailable && !this.isSortLocally && !this.loading && bottom < document.documentElement.clientHeight) {\n        const { id, order } = this.sorted;\n\n        this.start = this.end;\n        this.end = this.start + this.step;\n\n        this.loading = true;\n\n        const data = await this.loadData(id, order, this.start, this.end);\n        this.update(data);\n\n        this.loading = false;\n      }\n    }\n  }\n\n  update(data, isAppend = true) {\n    if (data && Object.values(data).length) {\n      this.subElements.table.classList.remove('sortable-table_empty');\n\n      if (isAppend) {\n        this.subElements.body.innerHTML += this.getRowsHtml(data);\n      } else {\n        this.subElements.body.innerHTML = this.getRowsHtml(data);\n      }\n    } else if (!isAppend) {\n      this.subElements.table.classList.add('sortable-table_empty');\n    }\n\n    this.data = data;\n  }\n\n  getTargetOrder(currentOrder) {\n    const obj = {\n      asc: 'desc',\n      desc: 'asc'\n    };\n\n    return obj[currentOrder];\n  }\n\n  destroy() {\n    if (this.element) {\n      this.element.remove();\n    }\n    window.removeEventListener('scroll', this.onWindowScroll);\n    this.element = null;\n  }\n}\n","export default class DoubleSlider {\n  element;\n  subElements = {};\n\n  onThumbPointerMove = event => {\n    event.preventDefault();\n\n    const { left: innerLeft, right: innerRight, width } = this.subElements.inner.getBoundingClientRect();\n\n    if (this.dragging === this.subElements.thumbLeft) {\n      let newLeft = (event.clientX - innerLeft + this.shiftX) / width;\n\n      if (newLeft < 0) {\n        newLeft = 0;\n      }\n      newLeft *= 100;\n      const right = parseFloat(this.subElements.thumbRight.style.right);\n\n      if (newLeft + right > 100) {\n        newLeft = 100 - right;\n      }\n\n      this.dragging.style.left = this.subElements.progress.style.left = newLeft + '%';\n      this.subElements.from.innerHTML = this.formatValue(this.getValue().from);\n    }\n\n    if (this.dragging === this.subElements.thumbRight) {\n      let newRight = (innerRight - event.clientX - this.shiftX) / width;\n\n      if (newRight < 0) {\n        newRight = 0;\n      }\n      newRight *= 100;\n\n      const left = parseFloat(this.subElements.thumbLeft.style.left);\n\n      if (left + newRight > 100) {\n        newRight = 100 - left;\n      }\n      this.dragging.style.right = this.subElements.progress.style.right = newRight + '%';\n      this.subElements.to.innerHTML = this.formatValue(this.getValue().to);\n    }\n  };\n\n  onThumbPointerUp = () => {\n    this.element.classList.remove('range-slider_dragging');\n\n    document.removeEventListener('pointermove', this.onThumbPointerMove);\n    document.removeEventListener('pointerup', this.onThumbPointerUp);\n\n    this.element.dispatchEvent(new CustomEvent('range-select', {\n      detail: this.getValue(),\n      bubbles: true\n    }));\n  };\n\n  constructor({\n                min = 100,\n                max = 200,\n                formatValue = value => '$' + value,\n                selected = {\n                  from: min,\n                  to: max\n                }\n              } = {}) {\n    this.min = min;\n    this.max = max;\n    this.formatValue = formatValue;\n    this.selected = selected;\n\n    this.render();\n  }\n\n  get template() {\n    const { from, to } = this.selected;\n\n    return `<div class=\"range-slider\">\n      <span data-element=\"from\">${this.formatValue(from)}</span>\n      <div data-element=\"inner\" class=\"range-slider__inner\">\n        <span data-element=\"progress\" class=\"range-slider__progress\"></span>\n        <span data-element=\"thumbLeft\" class=\"range-slider__thumb-left\"></span>\n        <span data-element=\"thumbRight\" class=\"range-slider__thumb-right\"></span>\n      </div>\n      <span data-element=\"to\">${this.formatValue(to)}</span>\n    </div>`;\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.element.ondragstart = () => false;\n\n    this.subElements = this.getSubElements(element);\n\n    this.initEventListeners();\n\n    this.update();\n  }\n\n  initEventListeners() {\n    const { thumbLeft, thumbRight } = this.subElements;\n\n    thumbLeft.addEventListener('pointerdown', event => this.onThumbPointerDown(event));\n    thumbRight.addEventListener('pointerdown', event => this.onThumbPointerDown(event));\n  }\n\n  getSubElements(element) {\n    const result = {};\n    const elements = element.querySelectorAll('[data-element]');\n\n    for (const subElement of elements) {\n      const name = subElement.dataset.element;\n\n      result[name] = subElement;\n    }\n\n    return result;\n  }\n\n  remove() {\n    this.element.remove();\n  }\n\n  destroy() {\n    this.remove();\n    document.removeEventListener('pointermove', this.onThumbPointerMove);\n    document.removeEventListener('pointerup', this.onThumbPointerUp);\n  }\n\n  update() {\n    const rangeTotal = this.max - this.min;\n    const left = Math.floor((this.selected.from - this.min) / rangeTotal * 100) + '%';\n    const right = Math.floor((this.max - this.selected.to) / rangeTotal * 100) + '%';\n\n    this.subElements.progress.style.left = left;\n    this.subElements.progress.style.right = right;\n\n    this.subElements.thumbLeft.style.left = left;\n    this.subElements.thumbRight.style.right = right;\n\n    this.subElements.from.innerText = this.formatValue(this.min);\n    this.subElements.to.innerText = this.formatValue(this.max);\n  }\n\n  onThumbPointerDown(event) {\n    const thumbElem = event.target;\n\n    event.preventDefault();\n\n    const { left, right } = thumbElem.getBoundingClientRect();\n\n    if (thumbElem === this.subElements.thumbLeft) {\n      this.shiftX = right - event.clientX;\n    } else {\n      this.shiftX = left - event.clientX;\n    }\n\n    this.dragging = thumbElem;\n\n    this.element.classList.add('range-slider_dragging');\n\n    document.addEventListener('pointermove', this.onThumbPointerMove);\n    document.addEventListener('pointerup', this.onThumbPointerUp);\n  }\n\n  getValue() {\n    const rangeTotal = this.max - this.min;\n    const { left } = this.subElements.thumbLeft.style;\n    const { right } = this.subElements.thumbRight.style;\n\n    const from = Math.round(this.min + parseFloat(left) * 0.01 * rangeTotal);\n    const to = Math.round(this.max - parseFloat(right) * 0.01 * rangeTotal);\n\n    return { from, to };\n  }\n}\n","const header = [\n  {\n    id: 'images',\n    title: 'Image',\n    sortable: false,\n    template: data => {\n      return `\n          <div class=\"sortable-table__cell\">\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${data[0].url}\">\n          </div>\n        `;\n    }\n  },\n  {\n    id: 'title',\n    title: 'Name',\n    sortable: true,\n    sortType: 'string'\n  },\n  {\n    id: 'subcategory',\n    title: 'Category',\n    sortable: false,\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          ${data.title}\n        </div>`;\n    }\n  },\n  {\n    id: 'quantity',\n    title: 'Quantity',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'price',\n    title: 'Price',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          $${data.toLocaleString('en-US')}\n        </div>`;\n    }\n  },\n  {\n    id: 'status',\n    title: 'Status',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          ${data > 0 ? 'Active' : 'Inactive'}\n        </div>`;\n    }\n  },\n];\n\nexport default header;\n","import SortableTable from '../../../components/sortable-table/index.js';\nimport DoubleSlider from '../../../components/double-slider/index.js';\nimport header from './products-header.js';\nimport fetchJson from '../../../utils/fetch-json';\n\nconst API_URL = 'api/rest/products?_embed=subcategory.category';\n\nexport default class Page {\n  element;\n  subElements = {};\n  components = {};\n  loadStep = 30;\n  loadStart = 0;\n  sliderMin = 1000;\n  sliderMax = 4000;\n\n  async render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    this.initComponents();\n    await this.renderComponents();\n\n    this.subElements = this.getSubElements(this.element);\n\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  async updateTableComponent () {\n    const params = this.getParamsFromForm();\n    const {status, title_like, price_lte, price_gte} = params;\n    const {sorted} = this.components.sortableTable;\n\n    this.components.sortableTable.filters = params;\n\n    const url = new URL(API_URL, process.env.BACKEND_URL);\n    url.searchParams.set('_sort', sorted.id);\n    url.searchParams.set('_order', sorted.order);\n    url.searchParams.set('_start', this.loadStart.toString());\n    url.searchParams.set('_end', this.loadStep.toString());\n    url.searchParams.set('price_lte', price_lte);\n    url.searchParams.set('price_gte', price_gte);\n\n    if (status) {\n      url.searchParams.set('status', status);\n    }\n\n    if (title_like) {\n      url.searchParams.set('title_like', title_like);\n    }\n\n    const data = await fetchJson(url);\n\n    this.components.sortableTable.update(data, false);\n  }\n\n  get template () {\n    return `<div class=\"product-list\">\n      <div class=\"content__top-panel\">\n        <h2 class=\"page-title\">Products</h2>\n        <a href=\"/products/add\" class=\"button-primary\">Добавить товар</a>\n      </div>\n\n      <div class=\"content-box content-box_small\">\n        <form class=\"form-inline\">\n          <div class=\"form-group\">\n            <label class=\"form-label\">Сортировать по:</label>\n            <input type=\"text\" data-element=\"filterName\" class=\"form-control\" placeholder=\"Название товара\">\n          </div>\n          <div class=\"form-group\" data-element=\"sliderContainer\">\n            <label class=\"form-label\">Цена:</label>\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">Статус:</label>\n            <select class=\"form-control\" data-element=\"filterStatus\">\n              <option value=\"\" selected=\"\">Любой</option>\n              <option value=\"1\">Активный</option>\n              <option value=\"0\">Неактивный</option>\n            </select>\n          </div>\n        </form>\n      </div>\n\n      <div data-element=\"sortableTable\">\n        <!-- sortable-table component -->\n      </div>\n    </div>`;\n  }\n\n  initComponents() {\n    const sortableTable = new SortableTable(header, {\n      url: API_URL,\n      sorted: {\n        id: 'title',\n        order: 'asc'\n      },\n      start: this.loadStart,\n      step: this.loadStep,\n      isSortLocally: false\n    });\n\n    const sliderContainer = new DoubleSlider({min: this.sliderMin, max: this.sliderMax});\n\n    this.components.sortableTable = sortableTable;\n    this.components.sliderContainer = sliderContainer;\n  }\n\n  renderComponents() {\n    Object.keys(this.components).forEach(component => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  getSubElements ($element) {\n    const elements = $element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  initEventListeners () {\n    this.subElements.emptyPlaceholder.querySelector('button').addEventListener('pointerdown', this.clearFilters);\n\n    this.subElements.filterStatus.addEventListener('change', () => {\n      this.updateTableComponent();\n    });\n\n    this.subElements.filterName.addEventListener('input', () => {\n      this.updateTableComponent();\n    });\n\n    this.components.sliderContainer.element.addEventListener('range-select', () => {\n      this.updateTableComponent();\n    });\n  }\n\n  clearFilters = () => {\n    this.subElements.filterName.value = '';\n    this.subElements.filterStatus.value = '';\n\n    this.components.sliderContainer.min = this.sliderMin;\n    this.components.sliderContainer.max = this.sliderMax;\n    this.components.sliderContainer.update();\n\n    this.updateTableComponent();\n  }\n\n  getParamsFromForm() {\n    const result = {};\n    const { from, to } = this.components.sliderContainer.getValue();\n\n    result.price_lte = to;\n    result.price_gte = from;\n    result.status = this.subElements.filterStatus.value;\n    result.title_like = this.subElements.filterName.value;\n\n    return result;\n  }\n\n  destroy() {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n"],"sourceRoot":""}