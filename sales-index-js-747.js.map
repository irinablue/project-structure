{"version":3,"sources":["webpack://project-structure/./src/components/range-picker/index.js","webpack://project-structure/./src/components/sortable-table/index.js","webpack://project-structure/./src/pages/sales/sales-header.js","webpack://project-structure/./src/pages/sales/index.js","webpack://project-structure/./src/utils/fetch-json.js"],"names":["RangePicker","date","toLocaleString","dateStyle","constructor","from","Date","to","event","isOpen","this","element","classList","contains","isRangePicker","target","close","showDateFrom","selected","render","formatDate","document","createElement","innerHTML","template","firstElementChild","subElements","getSubElements","initEventListeners","Promise","resolve","subElement","querySelectorAll","dataset","elem","input","selector","addEventListener","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","remove","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","add","selectedFromElem","closest","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","removeEventListener","destroy","SortableTable","headerConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","asc","desc","async","field","end","data","loadData","update","arrowContainer","arrowElement","addOrderToCell","currentOrder","header","targetOrder","getTargetOrder","sort","bottom","getBoundingClientRect","loadOnScrollAvailable","loading","documentElement","clientHeight","URL","process","getTable","searchParams","set","key","Object","entries","filters","toString","fetchJson","length","headerCell","append","setAttribute","orderedCell","removeAttribute","sortOnClient","sortOnServer","sortFieldConfig","sortType","direction","directions","sortedData","a","b","localeCompare","caseFirst","getTableHead","map","title","join","getTableRow","itemCells","getTableBody","getRowsHtml","result","elements","onSortableCellClick","window","onWindowScroll","isAppend","values","body","Intl","DateTimeFormat","day","format","year","Page","components","sortableTable","initComponents","rangePicker","renderComponents","keys","forEach","component","root","$element","reduce","accum","updateTableComponent","params","response","fetch","err","FetchError","ok","errorText","statusText","json","error","message","status","Error","super","reason","alert"],"mappings":"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","file":"sales-index-js-747.js","sourcesContent":["export default class RangePicker {\n  element = null;\n  subElements = {};\n  selectingFrom = true;\n  selected = {\n    from: new Date(),\n    to: new Date()\n  };\n\n  static formatDate (date) {\n    return date.toLocaleString('ru', {dateStyle: 'short'})\n  }\n\n  onDocumentClick = event => {\n    const isOpen = this.element.classList.contains('rangepicker_open');\n    const isRangePicker = this.element.contains(event.target);\n\n    if (isOpen && !isRangePicker) {\n      this.close();\n    }\n  };\n\n  constructor({from = new Date(), to = new Date()} = {}) {\n    this.showDateFrom = new Date(from);\n    this.selected = {from, to};\n\n    this.render();\n  }\n\n  get template () {\n    const from = RangePicker.formatDate(this.selected.from);\n    const to = RangePicker.formatDate(this.selected.to);\n\n    return `<div class=\"rangepicker\">\n      <div class=\"rangepicker__input\" data-elem=\"input\">\n        <span data-elem=\"from\">${from}</span> -\n        <span data-elem=\"to\">${to}</span>\n      </div>\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\n    </div>`;\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(element);\n\n    this.initEventListeners();\n\n    return Promise.resolve(this.element);\n  }\n\n  getSubElements (element) {\n    const subElements = {};\n\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\n      subElements[subElement.dataset.elem] = subElement;\n    }\n\n    return subElements;\n  }\n\n  initEventListeners () {\n    const {input, selector} = this.subElements;\n\n    document.addEventListener('click', this.onDocumentClick, true);\n    input.addEventListener('click', () => this.toggle());\n    selector.addEventListener('click', event => this.onSelectorClick(event));\n  }\n\n  toggle() {\n    this.element.classList.toggle('rangepicker_open');\n    this.renderDateRangePicker();\n  }\n\n  onSelectorClick({target}) {\n    if (target.classList.contains('rangepicker__cell')) {\n      this.onRangePickerCellClick(target);\n    }\n  }\n\n  close() {\n    this.element.classList.remove('rangepicker_open');\n  }\n\n  renderDateRangePicker() {\n    const showDate1 = new Date(this.showDateFrom);\n    const showDate2 = new Date(this.showDateFrom);\n    const { selector } = this.subElements;\n\n    showDate2.setMonth(showDate2.getMonth() + 1);\n\n    selector.innerHTML = `\n      <div class=\"rangepicker__selector-arrow\"></div>\n      <div class=\"rangepicker__selector-control-left\"></div>\n      <div class=\"rangepicker__selector-control-right\"></div>\n      ${this.renderCalendar(showDate1)}\n      ${this.renderCalendar(showDate2)}\n    `;\n\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\n\n    controlLeft.addEventListener('click', () => this.prev());\n    controlRight.addEventListener('click', () => this.next());\n\n    this.renderHighlight();\n  }\n\n  prev () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\n    this.renderDateRangePicker();\n  }\n\n  next () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\n    this.renderDateRangePicker();\n  }\n\n  renderHighlight() {\n    const { from, to } = this.selected;\n\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\n      const { value } = cell.dataset;\n      const cellDate = new Date(value);\n\n      cell.classList.remove('rangepicker__selected-from');\n      cell.classList.remove('rangepicker__selected-between');\n      cell.classList.remove('rangepicker__selected-to');\n\n      if (from && value === from.toISOString()) {\n        cell.classList.add('rangepicker__selected-from');\n      } else if (to && value === to.toISOString()) {\n        cell.classList.add('rangepicker__selected-to');\n      } else if (from && to && cellDate >= from && cellDate <= to) {\n        cell.classList.add('rangepicker__selected-between');\n      }\n    }\n\n    if (from) {\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\n      if (selectedFromElem) {\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\n      }\n    }\n\n    if (to) {\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\n      if (selectedToElem) {\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\n      }\n    }\n  }\n\n  renderCalendar(showDate) {\n    const date = new Date(showDate);\n    const getGridStartIndex = dayIndex => {\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\n      return index + 1;\n    };\n\n    date.setDate(1);\n\n    // text-transform: capitalize\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\n\n    let table = `<div class=\"rangepicker__calendar\">\n      <div class=\"rangepicker__month-indicator\">\n        <time datetime=${monthStr}>${monthStr}</time>\n      </div>\n      <div class=\"rangepicker__day-of-week\">\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\n      </div>\n      <div class=\"rangepicker__date-grid\">\n    `;\n\n    // first day of month starts after a space\n    // * * * 1 2 3 4\n    table += `\n      <button type=\"button\"\n        class=\"rangepicker__cell\"\n        data-value=\"${date.toISOString()}\"\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\n          ${date.getDate()}\n      </button>`;\n\n    date.setDate(2);\n\n    while (date.getMonth() === showDate.getMonth()) {\n      table += `\n        <button type=\"button\"\n          class=\"rangepicker__cell\"\n          data-value=\"${date.toISOString()}\">\n            ${date.getDate()}\n        </button>`;\n\n      date.setDate(date.getDate() + 1);\n    }\n\n    // close the table\n    table += '</div></div>';\n\n    return table;\n  }\n\n  onRangePickerCellClick(target) {\n    const { value } = target.dataset;\n\n    if (value) {\n      const dateValue = new Date(value);\n\n      if (this.selectingFrom) {\n        this.selected = {\n          from: dateValue,\n          to:   null\n        };\n        this.selectingFrom = false;\n        this.renderHighlight();\n      } else {\n        if (dateValue > this.selected.from) {\n          this.selected.to = dateValue;\n        } else {\n          this.selected.to = this.selected.from;\n          this.selected.from = dateValue;\n        }\n\n        this.selectingFrom = true;\n        this.renderHighlight();\n      }\n\n      if (this.selected.from && this.selected.to) {\n        this.dispatchEvent();\n        this.close();\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\n      }\n    }\n  }\n\n  dispatchEvent () {\n    this.element.dispatchEvent(new CustomEvent('date-select', {\n      bubbles: true,\n      detail:  this.selected\n    }));\n  }\n\n  remove () {\n    this.element.remove();\n    // TODO: Warning! To remove listener  MUST be passes the same event phase\n    document.removeEventListener('click', this.onDocumentClick, true);\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.subElements = {};\n    this.selectingFrom = true;\n    this.selected = {\n      from: new Date(),\n      to: new Date()\n    };\n\n    return this;\n  }\n}\n","import fetchJson from '../../utils/fetch-json.js';\n\nexport default class SortableTable {\n  data = [];\n  element;\n  subElements;\n  arrowElement;\n  filters = {};\n  directions = {\n    asc: 1,\n    desc: -1\n  };\n  offset = 50;\n  loading = false;\n  loadOnScrollAvailable = true;\n\n  constructor(headerConfig = [], {\n    url = '',\n    sorted = {\n      id: headerConfig.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    step = 30,\n    start = 0\n  } = {}) {\n    this.headerConfig = headerConfig;\n    this.url = new URL(url, process.env.BACKEND_URL);\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n    this.start = start;\n    this.step = step;\n    this.end = this.start + this.step;\n\n    this.render();\n  }\n\n  get template() {\n    return `\n      <div data-element=\"productsContainer\" class=\"products-list__container\">\n        ${this.getTable()}\n      </div>\n    `;\n  }\n\n  async loadData(id, order, start, end) {\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    for (const [key, value] of Object.entries(this.filters)) {\n      if (value || value === 0) {\n        this.url.searchParams.set(key, value.toString());\n      }\n    }\n\n    this.subElements.table.classList.add('sortable-table_loading');\n\n    const data = await fetchJson(this.url);\n\n    this.subElements.table.classList.remove('sortable-table_loading');\n\n    this.loadOnScrollAvailable = data.length === this.step;\n\n    return data;\n  }\n\n  addOrderToCell(field, order) {\n    const headerCell = this.subElements.header.querySelector(`[data-id=${field}]`);\n    if (headerCell) {\n      headerCell.append(this.arrowElement);\n      headerCell.setAttribute('data-order', order);\n    }\n  }\n\n  sort(field, order) {\n    const orderedCell = this.subElements.header.querySelector(`[data-order]`);\n    if (orderedCell) {\n      orderedCell.removeAttribute('data-order');\n    }\n\n    this.addOrderToCell(field, order);\n\n    this.start = 0;\n    this.sorted = {\n      id: field,\n      order: order\n    };\n\n    if (this.isSortLocally) {\n      this.sortOnClient(field, order);\n    } else {\n      this.sortOnServer(field, order);\n    }\n  }\n\n  sortOnServer = async (field, order) => {\n    this.end = this.step;\n    const data = await this.loadData(field, order, this.start, this.step);\n    this.update(data, false);\n  }\n\n  sortOnClient(field, order) {\n    const sortFieldConfig = this.headerConfig.find(item => item.id === field);\n    const sortType = sortFieldConfig ? sortFieldConfig.sortType : 'number';\n    const direction = this.directions[order];\n\n    const sortedData = [...this.data].sort((a, b) => {\n      switch (sortType) {\n        case 'number':\n          return direction * (a[field] - b[field]);\n        case 'string':\n          return direction * a[field].localeCompare(b[field], ['ru', 'en'], {caseFirst: 'upper'});\n      }\n    });\n\n    this.update(sortedData, false);\n  }\n\n  getTableHead() {\n    const headerCells = this.headerConfig.map(cell => {\n      return `\n        <div class=\"sortable-table__cell\" data-id=\"${cell.id}\" data-sortable=\"${cell.sortable}\">\n          <span>${cell.title}</span>\n        </div>\n      `;\n    });\n\n    return `\n      <div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n        ${headerCells.join('')}\n      </div>\n    `;\n  }\n\n  getTableRow(item) {\n    const itemCells = this.headerConfig.map(cell => {\n      return cell.template ? cell.template(item[cell.id]) : `\n        <div class=\"sortable-table__cell\">${item[cell.id]}</div>\n      `;\n    });\n\n    return `\n      <a href=\"/products/${item.id}\" class=\"sortable-table__row\">\n        ${itemCells.join('')}\n      </a>\n    `;\n  }\n\n  getTableBody() {\n    return `\n      <div data-element=\"body\" class=\"sortable-table__body\">\n        ${this.getRowsHtml()}\n      </div>\n    `;\n  }\n\n  getTable() {\n    return `\n      <div data-element=\"table\" class=\"sortable-table sortable-table_loading\">\n        ${this.getTableHead()}\n        ${this.getTableBody()}\n\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          <div>\n            <p>No products satisfies your filter criteria</p>\n            <button type=\"button\" class=\"button-primary-outline\">Reset all filters</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  getSubElements(element) {\n    const result = {};\n    const elements = element.querySelectorAll('[data-element]');\n\n    for (const subElement of elements) {\n      const name = subElement.dataset.element;\n\n      result[name] = subElement;\n    }\n\n    return result;\n  }\n\n  getRowsHtml(data = this.data) {\n    const rows = data.map(item => {\n      return this.getTableRow(item);\n    });\n    return rows.join('');\n  }\n\n  render = async () => {\n    const {id, order} = this.sorted;\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    const arrowContainer = document.createElement('div');\n    arrowContainer.innerHTML = `\n      <span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n        <span class=\"sort-arrow\"></span>\n      </span>\n    `;\n    this.arrowElement = arrowContainer.firstElementChild;\n\n    const data = await this.loadData(id, order, this.start, this.end);\n\n    this.update(data);\n    this.addOrderToCell(id, order);\n    this.addEventListener();\n  }\n\n  addEventListener() {\n    this.subElements.header.addEventListener('pointerdown', this.onSortableCellClick);\n    window.addEventListener('scroll', this.onWindowScroll);\n  }\n\n  onSortableCellClick = (event) => {\n    if (event.target.closest('[data-sortable=\"true\"]')) {\n      const field = event.target.closest('[data-sortable]').dataset.id;\n      const currentOrder = this.subElements.header.querySelector(`[data-order]`);\n      const targetOrder = currentOrder ? this.getTargetOrder(currentOrder.dataset.order) : 'asc';\n\n      this.sort(field, targetOrder);\n    }\n  }\n\n  onWindowScroll = async () => {\n    if (this.element) {\n      const { bottom } = this.element.getBoundingClientRect();\n\n      if (this.loadOnScrollAvailable && !this.isSortLocally && !this.loading && bottom < document.documentElement.clientHeight) {\n        const { id, order } = this.sorted;\n\n        this.start = this.end;\n        this.end = this.start + this.step;\n\n        this.loading = true;\n\n        const data = await this.loadData(id, order, this.start, this.end);\n        this.update(data);\n\n        this.loading = false;\n      }\n    }\n  }\n\n  update(data, isAppend = true) {\n    if (data && Object.values(data).length) {\n      this.subElements.table.classList.remove('sortable-table_empty');\n\n      if (isAppend) {\n        this.subElements.body.innerHTML += this.getRowsHtml(data);\n      } else {\n        this.subElements.body.innerHTML = this.getRowsHtml(data);\n      }\n    } else if (!isAppend) {\n      this.subElements.table.classList.add('sortable-table_empty');\n    }\n\n    this.data = data;\n  }\n\n  getTargetOrder(currentOrder) {\n    const obj = {\n      asc: 'desc',\n      desc: 'asc'\n    };\n\n    return obj[currentOrder];\n  }\n\n  destroy() {\n    if (this.element) {\n      this.element.remove();\n    }\n    window.removeEventListener('scroll', this.onWindowScroll);\n    this.element = null;\n  }\n}\n","const header = [\n  {\n    id: 'id',\n    title: 'ID',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'user',\n    title: 'Клиент',\n    sortable: true,\n    sortType: 'string'\n  },\n  {\n    id: 'createdAt',\n    title: 'Дата',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      const day = new Intl.DateTimeFormat('ru', {day: '2-digit'}).format(new Date(data));\n      const month = new Intl.DateTimeFormat('ru', {month: 'short'}).format(new Date(data));\n      const year = new Intl.DateTimeFormat('ru', {year: 'numeric'}).format(new Date(data));\n      return `<div class=\"sortable-table__cell\">\n          ${day} ${month} ${year} г.\n        </div>`;\n    }\n  },\n  {\n    id: 'totalCost',\n    title: 'Стоимость',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          $${data.toLocaleString('en-US')}\n        </div>`;\n    }\n  },\n  {\n    id: 'delivery',\n    title: 'Статус',\n    sortable: true,\n    sortType: 'string'\n  },\n];\n\nexport default header;\n","import RangePicker from '../../components/range-picker/index.js';\nimport SortableTable from '../../components/sortable-table/index.js';\nimport header from './sales-header.js';\n\nimport fetchJson from '../../utils/fetch-json.js';\n\nexport default class Page {\n  element;\n  subElements = {};\n  components = {};\n\n  async updateTableComponent (from, to) {\n    const url = new URL('api/rest/orders', process.env.BACKEND_URL);\n    url.searchParams.set('createdAt_gte', from.toISOString());\n    url.searchParams.set('createdAt_lte', to.toISOString());\n\n    const data = await fetchJson(url);\n    this.components.sortableTable.update(data, false);\n  }\n\n  initComponents () {\n    const to = new Date();\n    const from = new Date();\n    from.setMonth(to.getMonth() - 1);\n\n    const rangePicker = new RangePicker({\n      from,\n      to\n    });\n\n    const sortableTable = new SortableTable(header, {\n      url: `api/rest/orders?createdAt_gte=${from.toISOString()}&createdAt_lte=${to.toISOString()}`,\n      sorted: {\n        id: 'createdAt',\n        order: 'desc'\n      },\n      start: 0,\n      step: 30,\n      isSortLocally: false\n    });\n\n    this.components.sortableTable = sortableTable;\n    this.components.rangePicker = rangePicker;\n  }\n\n  get template () {\n    return `<div class=\"dashboard\">\n      <div class=\"content__top-panel\">\n        <h2 class=\"page-title\">Продажи</h2>\n        <!-- RangePicker component -->\n        <div data-element=\"rangePicker\"></div>\n      </div>\n\n      <div data-element=\"sortableTable\">\n        <!-- sortable-table component -->\n      </div>\n    </div>`;\n  }\n\n  async render () {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    await this.initComponents();\n\n    this.renderComponents();\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  renderComponents () {\n    Object.keys(this.components).forEach(component => {\n      const root = this.subElements[component];\n      const { element } = this.components[component];\n\n      root.append(element);\n    });\n  }\n\n  getSubElements ($element) {\n    const elements = $element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  initEventListeners () {\n    this.components.rangePicker.element.addEventListener('date-select', event => {\n      const { from, to } = event.detail;\n      this.updateTableComponent(from, to);\n    });\n  }\n\n  destroy () {\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n"],"sourceRoot":""}